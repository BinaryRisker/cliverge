[workspace]
resolver = "2"
members = [
    "crates/cliverge-core",
    "crates/cliverge-gui",  # Package renamed to 'cliverge' but directory stays the same
]

[workspace.dependencies]
tokio = { version = "1.47", features = ["rt", "rt-multi-thread", "fs", "time", "sync"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
tracing = "0.1"
dirs = "5.0"
chrono = { version = "0.4", features = ["serde"] }
regex = "1.0"

[profile.release]
strip = true
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
debug = 1

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.29.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-pc-windows-msvc"]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false
# Extra static files to include in each App (path relative to this Cargo.toml's dir)
include = [
  "README.md",
  "LICENSE",
  "docs/",
]
# A GitHub repo to push Homebrew formulas to
# tap = "my-org/homebrew-my-app"
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Whether cargo-dist should create a GitHub Release or use an existing draft
create-release = true
# Whether CI should trigger on pushes to the main branch (in addition to tag pushes)
pr-run-mode = "plan"
